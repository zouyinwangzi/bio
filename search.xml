<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>文本处理工具sed</title>
    <url>/2019/12/31/sed/</url>
    <content><![CDATA[<p>sed（stream editor）是一种非交互式的流编辑器，通过多种转换修改流经它的文本。但是请注意，默认情况下，sed并不会改变原文件本身，而只是对流经sed命令的文本进行修改，并将修改后的结果打印到标准输出中（也就是屏幕）。所以本节讲的所有的sed操作都只是对“流”的操作，并不会改变原文件。sed处理文本时是以行为单位的，每处理完一行就立即打印出来，然后再处理下一行，直至全文处理结束。sed可做的编辑动作包括删除、查找替换、添加、插入、从其他文件中读入数据等。</p>
<a id="more"></a>

<p>sed命令使用的场景包括以下一些：</p>
<ul>
<li>常规编辑器编辑困难的文本。</li>
<li>太过于庞大的文本，使用常规编辑器难以胜任（比如说vi一个几百兆的文件）。</li>
<li>有规律的文本修改，加快文本处理速度（比如说全文替换）。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed [options] <span class="string">'command'</span> file</span><br><span class="line"><span class="comment">#options是sed可以接受的参数</span></span><br><span class="line"><span class="comment">#command是sed的命令集（一共有25个）</span></span><br><span class="line"><span class="comment">#使用-e参数和分号连接多编辑命令</span></span><br><span class="line"><span class="comment">#该参数本身只是sed的一个简单参数，表示将下一个字符串解析为sed编辑命令</span></span><br><span class="line"><span class="comment">#一般情况下可以忽略，但是当sed需要传递多个编辑命令时该参数就不能少了</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#准备测试文本如下</span><br><span class="line">[root@localhost ~]# cat Sed.txt</span><br><span class="line">this is line 1,this is First line</span><br><span class="line">this is line 2,the Second line,Empty line followed</span><br><span class="line"></span><br><span class="line">this is line 4,this is Third line</span><br><span class="line">this is line 5,this is Fifth line</span><br></pre></td></tr></table></figure>
<h3 id="使用-e或分号连接多个命令"><a href="#使用-e或分号连接多个命令" class="headerlink" title="使用-e或分号连接多个命令"></a>使用-e或分号连接多个命令</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#两个编辑命令前都要使用-e参数，如果有更多的编辑需求，以此类推即可</span><br><span class="line">[root@localhost ~]# sed-e &#39;s&#x2F;this&#x2F;That&#x2F;g&#39;-e &#39;s&#x2F;line&#x2F;LINE&#x2F;g&#39; Sed.txt</span><br><span class="line">That is LINE 1,That is First LINE</span><br><span class="line">That is LINE 2,the Second LINE,Empty LINE followed</span><br><span class="line"></span><br><span class="line">That is LINE 4,That is Third LINE</span><br><span class="line">That is LINE 5,That is Fifth LINE</span><br><span class="line"></span><br><span class="line">#使用分号连接两个都编辑命令</span><br><span class="line">#上面的命令可以用分号改写为：</span><br><span class="line">[root@localhost ~]# sed &#39;s&#x2F;this&#x2F;That&#x2F;g ; s&#x2F;line&#x2F;LINE&#x2F;g&#39; Sed.txt</span><br></pre></td></tr></table></figure>
<h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><h4 id="删除第一行"><a href="#删除第一行" class="headerlink" title="删除第一行"></a>删除第一行</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#将file的第一行删除后输出到屏幕</span><br><span class="line">[root@localhost ~]# sed &#39;1d&#39; Sed.txt</span><br><span class="line">this is line 2,the Second line,Empty line followed</span><br><span class="line"></span><br><span class="line">this is line 4,this is Third line</span><br><span class="line">this is line 5,this is Fifth line</span><br><span class="line"></span><br><span class="line">#如果想直接修改文件，使用-i参数</span><br><span class="line">#这里不会有任何输出，而是直接修改了源文件，删除了第一行</span><br><span class="line">sed -i &#39;1d&#39; file</span><br></pre></td></tr></table></figure>

<h4 id="删除指定范围的行"><a href="#删除指定范围的行" class="headerlink" title="删除指定范围的行"></a>删除指定范围的行</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#删除指定范围的行（第1行到第5行）</span><br><span class="line">[root@localhost ~]# sed &#39;1,3d&#39; Sed.txt</span><br><span class="line">this is line 4,this is Third line</span><br><span class="line">this is line 5,this is Fifth line</span><br><span class="line"></span><br><span class="line">#删除指定范围的行（第一行到最后行）</span><br><span class="line">[root@localhost ~]# sed &#39;1,$d&#39; Sed.txt</span><br><span class="line">[root@localhost ~]#   </span><br><span class="line"></span><br><span class="line">#清空了Sed.txt文件</span><br><span class="line">#删除最后一行</span><br><span class="line">[root@localhost ~]# sed &#39;$d&#39; Sed.txt</span><br><span class="line">this is line 1,this is First line</span><br><span class="line"></span><br><span class="line">this is line 2,the Second line,Empty line followed this is line 4,this is Third line</span><br></pre></td></tr></table></figure>
<h4 id="删除指定范围以外的行"><a href="#删除指定范围以外的行" class="headerlink" title="删除指定范围以外的行"></a>删除指定范围以外的行</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#删除除指定范围以外的行（只保留第5行）</span><br><span class="line">[root@localhost ~]# sed &#39;5!d&#39; Sed.txt</span><br><span class="line">this is line 5,this is Fifth line</span><br></pre></td></tr></table></figure>
<h4 id="删除正则匹配的行"><a href="#删除正则匹配的行" class="headerlink" title="删除正则匹配的行"></a>删除正则匹配的行</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#删除所有包含Empty的行</span><br><span class="line">[root@localhost ~]# sed &#39;&#x2F;Empty&#x2F;d&#39; Sed.txt</span><br><span class="line">this is line 1,this is First line</span><br><span class="line"></span><br><span class="line">this is line 4,this is Third line</span><br><span class="line">this is line 5,this is Fifth line</span><br></pre></td></tr></table></figure>
<h4 id="删除空行"><a href="#删除空行" class="headerlink" title="删除空行"></a>删除空行</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# sed &#39;&#x2F;^$&#x2F;d&#39; Sed.txt</span><br><span class="line">this is line 1,this is First line</span><br><span class="line">this is line 2,the Second line,Empty line followed</span><br><span class="line">this is line 4,this is Third line</span><br><span class="line">this is line 5,this is Fifth line</span><br></pre></td></tr></table></figure>
<h3 id="查找替换"><a href="#查找替换" class="headerlink" title="查找替换"></a>查找替换</h3><p>使用s命令可将查找到的匹配文本内容替换为新的文本。</p>
<h4 id="默认替换每行第一个"><a href="#默认替换每行第一个" class="headerlink" title="默认替换每行第一个"></a>默认替换每行第一个</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#s命令用于替换文本，本例中使用LINE替换line</span><br><span class="line">#请注意每一行只有第一个line被替换了，默认情况下只替换第一次匹配到的内容</span><br><span class="line">#替换并打印</span><br><span class="line">[root@localhost ~]# sed &#39;s&#x2F;line&#x2F;LINE&#x2F;&#39; Sed.txt</span><br><span class="line">this is LINE 1,this is First line</span><br><span class="line">this is LINE 2,the Second line,Empty line followed</span><br><span class="line"></span><br><span class="line">this is LINE 4,this is Third line</span><br><span class="line">this is LINE 5,this is Fifth line</span><br></pre></td></tr></table></figure>
<h4 id="替换每行前两个"><a href="#替换每行前两个" class="headerlink" title="替换每行前两个"></a>替换每行前两个</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#要想每行最多匹配2个line，并改为LINE，可用如下方式</span><br><span class="line">#注意到第2行中有3个line，前两个被替换了，第三个没有变化</span><br><span class="line">[root@localhost ~]# sed &#39;s&#x2F;line&#x2F;LINE&#x2F;2&#39; Sed.txt</span><br><span class="line">this is line 1,this is First LINE</span><br><span class="line">this is line 2,the Second LINE,Empty line followed</span><br><span class="line"></span><br><span class="line">this is line 4,this is Third LINE</span><br><span class="line">this is line 5,this is Fifth LINE</span><br></pre></td></tr></table></figure>
<h4 id="替换所有匹配"><a href="#替换所有匹配" class="headerlink" title="替换所有匹配"></a>替换所有匹配</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#s命令利用g选项，可以完成所有匹配值的替换</span><br><span class="line">[root@localhost ~]# sed &#39;s&#x2F;line&#x2F;LINE&#x2F;g&#39; Sed.txt</span><br><span class="line">this is LINE 1,this is First LINE</span><br><span class="line">this is LINE 2,the Second LINE,Empty LINE followed</span><br><span class="line"></span><br><span class="line">this is LINE 4,this is Third LINE</span><br><span class="line">this is LINE 5,this is Fifth LINE</span><br></pre></td></tr></table></figure>
<h4 id="替换开头"><a href="#替换开头" class="headerlink" title="替换开头"></a>替换开头</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#只替换开头的this为that</span><br><span class="line">[root@localhost ~]# sed &#39;s&#x2F;^this&#x2F;that&#x2F;&#39; Sed.txt</span><br><span class="line">that is line 1,this is First line</span><br><span class="line">that is line 2,the Second line,Empty line followed</span><br><span class="line"></span><br><span class="line">that is line 4,this is Third line</span><br><span class="line">that is line 5,this is Fifth line</span><br></pre></td></tr></table></figure>
<h3 id="字符转换"><a href="#字符转换" class="headerlink" title="字符转换"></a>字符转换</h3><p>类似于perl的tr<br>使用y命令可进行字符转换，其作用为将一系列字符逐个地变换为另外一系列字符，基本用法如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#该命令会将file中的O转换为N、L转换为E、D转换为W</span><br><span class="line">#注意转换字符和被转换字符的长度要相等，否则sed无法执行</span><br><span class="line">sed  &#39;y&#x2F;OLD&#x2F;NEW&#x2F;&#39; file</span><br></pre></td></tr></table></figure>
<p>下面的命令演示了将数字1转换为A，2转换为B，4转换为C，5转换成D的用法。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# sed &#39;y&#x2F;1245&#x2F;ABCD&#x2F;&#39; Sed.txt</span><br><span class="line">this is line A,this is First line</span><br><span class="line">this is line B,the Second line,Empty line followed</span><br><span class="line">this is line C,this is Third line</span><br><span class="line">this is line D,this is Fifth line</span><br></pre></td></tr></table></figure>
<h3 id="匹配并插入文本"><a href="#匹配并插入文本" class="headerlink" title="匹配并插入文本"></a>匹配并插入文本</h3><p>使用i或a命令插入文本，其中i代表在匹配行之前插入，而a代表在匹配行之后插入，示例如下：</p>
<h4 id="匹配行之前插入文本"><a href="#匹配行之前插入文本" class="headerlink" title="匹配行之前插入文本"></a>匹配行之前插入文本</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#使用i在第二行前插入文本</span><br><span class="line">[root@localhost ~]# sed &#39;2 i Insert&#39; Sed.txt</span><br><span class="line">this is line 1,this is First line</span><br><span class="line">Insert</span><br><span class="line">this is line 2,the Second line,Empty line followed</span><br><span class="line"></span><br><span class="line">this is line 4,this is Third line</span><br><span class="line">this is line 5,this is Fifth line</span><br></pre></td></tr></table></figure>
<h4 id="匹配行后插入文本"><a href="#匹配行后插入文本" class="headerlink" title="匹配行后插入文本"></a>匹配行后插入文本</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#使用a在第二行后插入文本</span><br><span class="line">[root@localhost ~]# sed &#39;2 a Insert&#39; Sed.txt</span><br><span class="line">this is line 1,this is First line</span><br><span class="line">this is line 2,the Second line,Empty line followed</span><br><span class="line">Insert</span><br><span class="line"></span><br><span class="line">this is line 4,this is Third line</span><br><span class="line">this is line 5,this is Fifth line</span><br></pre></td></tr></table></figure>
<h4 id="匹配行的上一行插入文本"><a href="#匹配行的上一行插入文本" class="headerlink" title="匹配行的上一行插入文本"></a>匹配行的上一行插入文本</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#在匹配行的上一行插入问题</span><br><span class="line">[root@localhost ~]# sed &#39;&#x2F;Second&#x2F;i\Insert&#39; Sed.txt</span><br><span class="line">this is line 1,this is First line</span><br><span class="line">Insert</span><br><span class="line">this is line 2,the Second line,Empty line followed</span><br><span class="line"></span><br><span class="line">this is line 4,this is Third line</span><br><span class="line">this is line 5,this is Fifth line</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux相关</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>文本处理</tag>
      </tags>
  </entry>
  <entry>
    <title>文本处理工具awk</title>
    <url>/2019/12/24/awk/</url>
    <content><![CDATA[<p>awk每行为一条记录，每条记录执行awk的所有命令。每行默认以空格或tab键分割，依次为$1,$2,$3 …。NR代表每行的行号，NF代表每列tab或空格分割后有几列。</p>
<a id="more"></a>
<h2 id="字段分隔符"><a href="#字段分隔符" class="headerlink" title="字段分隔符"></a>字段分隔符</h2><p>字段分隔符默认是空格或tab，通过-F参数可以修改。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[bio@ubuntu ~]$ ll |grep ^d</span><br><span class="line">drwxr-xr-x 45 bio  bio     4096  5月 22 13:34 ./</span><br><span class="line">drwxr-xr-x  3 root root    4096  1月 20 19:40 ../</span><br><span class="line">drwx------  3 bio  bio     4096  5月 22 11:44 .adobe/</span><br><span class="line">drwxrwxr-x  3 bio  bio     4096  3月 16 12:50 .aspera/</span><br><span class="line">drwxrwxr-x  2 bio  bio     4096  5月 21 17:58 bash/</span><br><span class="line">drwx------ 25 bio  bio     4096  5月  7 14:21 .cache/</span><br><span class="line">drwxrwxr-x  3 bio  bio     4096  2月 27 11:24 .codeintel/</span><br><span class="line">drwx------  3 bio  bio     4096  1月 20 20:19 .compiz/</span><br><span class="line">drwxr-xr-x 28 bio  bio     4096  5月  9 11:37 .config/</span><br><span class="line">drwxr-xr-x  6 root root    4096  4月  8 16:56 .cpan/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 字段分隔符改为冒号</span></span><br><span class="line">[bio@ubuntu ~]$ ll |grep ^d|awk -F: <span class="string">'&#123;print $1&#125;'</span></span><br><span class="line">drwxr-xr-x 45 bio  bio     4096  5月 22 13</span><br><span class="line">drwxr-xr-x  3 root root    4096  1月 20 19</span><br><span class="line">drwx------  3 bio  bio     4096  5月 22 11</span><br><span class="line">drwxrwxr-x  3 bio  bio     4096  3月 16 12</span><br><span class="line">drwxrwxr-x  2 bio  bio     4096  5月 21 17</span><br><span class="line">drwx------ 25 bio  bio     4096  5月  7 14</span><br><span class="line">drwxrwxr-x  3 bio  bio     4096  2月 27 11</span><br><span class="line">drwx------  3 bio  bio     4096  1月 20 20</span><br><span class="line">drwxr-xr-x 28 bio  bio     4096  5月  9 11</span><br><span class="line">drwxr-xr-x  6 root root    4096  4月  8 16</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 字段分隔符有两个：冒号和i。中括号内可以使用正则表达式</span></span><br><span class="line">[bio@ubuntu ~]$ ll |grep ^d|awk -F‘[:i]’ <span class="string">'&#123;print $1,$2&#125;'</span></span><br><span class="line">drwxr-xr-x 45 b o  b</span><br><span class="line">drwxr-xr-x  3 root root    4096  1月 20 19 40 ../</span><br><span class="line">drwx------  3 b o  b</span><br><span class="line">drwxrwxr-x  3 b o  b</span><br><span class="line">drwxrwxr-x  2 b o  b</span><br></pre></td></tr></table></figure>

<h2 id="BEGIN"><a href="#BEGIN" class="headerlink" title="BEGIN"></a>BEGIN</h2><p>awk在处理文件的行之前先执行BEGIN块的语句，未完成则不读取文件内容。作用如下：</p>
<ul>
<li>更改内置变量；</li>
<li>自定义变量初始化；</li>
<li>打印头文件和标题；</li>
</ul>
<h2 id="内置变量"><a href="#内置变量" class="headerlink" title="内置变量"></a>内置变量</h2><ul>
<li>FS：字段分隔符；</li>
<li>OFS：输出时的字段分隔符；</li>
<li>RS：输入记录的行分隔符；</li>
<li>ORS：输出时的行分隔符；</li>
<li>NR：行号；</li>
<li>FNR：文件的所有行数；</li>
<li>NF：每行列数；</li>
<li>ARGC：命令行参数个数；</li>
<li>ARGV：命令行参数组成的数组；</li>
<li>FILENAME：当前输入文件的名字；</li>
<li>IGNORECASE：1表示忽略大小写；（测试了一下貌似不管用）</li>
</ul>
<h2 id="运算符-和–"><a href="#运算符-和–" class="headerlink" title="运算符++和–"></a>运算符++和–</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 当++作为后缀时，先将x的值赋值给y，再对x加1</span></span><br><span class="line">[bio@ubuntu ~/bash]$ awk <span class="string">'BEGIN&#123;x=1;y=x++;print x, y&#125;'</span></span><br><span class="line">2 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当++为前缀时，先x的值加1，然后x赋值给y</span></span><br><span class="line">[bio@ubuntu ~/bash]$ awk <span class="string">'BEGIN&#123;x=1;y=++x;print x, y&#125;'</span></span><br><span class="line">2 2</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux相关</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>文本处理</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Aspera从NCBI或EBI高速下载SRA测序文件</title>
    <url>/2019/12/24/aspera/</url>
    <content><![CDATA[<p>Aspera提供了大文件高速传输方案，适合于大数据的传输。客服端的使用是免费的。</p>
<a id="more"></a>
<h3 id="Aspera下载和安装"><a href="#Aspera下载和安装" class="headerlink" title="Aspera下载和安装"></a>Aspera下载和安装</h3><p>下载地址，有windows和Linux版的，下面安装的是Linux版的，因为后续处理sra文件都是在Linux上操作。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[bio@ubuntubio]$ wget http://download.asperasoft.com/download/sw/connect/3.7.4/aspera-connect-3.7.4.147727-linux-64.tar.gz</span><br><span class="line">[bio@ubuntubio]$ tar -zxf aspera-connect-3.7.4.147727-linux-64.tar.gz</span><br><span class="line">[bio@ubuntubio]$ bash aspera-connect-3.7.4.147727-linux-64.sh</span><br><span class="line"><span class="comment">###</span></span><br><span class="line">Installing Aspera Connect</span><br><span class="line"> </span><br><span class="line">Deploying Aspera Connect (/home/bio/.aspera/connect) <span class="keyword">for</span> the current user only.</span><br><span class="line">Unable to update desktop database, Aspera Connect may not be able to auto-launch</span><br><span class="line">Restart firefox manually to load the Aspera Connect plug-in</span><br><span class="line"><span class="comment">###</span></span><br><span class="line">[bio@ubuntu~]$ <span class="built_in">echo</span> <span class="string">'PATH=$PATH:~/.aspera/connect/bin/'</span> &gt;&gt; ~/.bashrc</span><br><span class="line">[bio@ubuntu~]$ <span class="built_in">source</span> .bashrc</span><br></pre></td></tr></table></figure>

<h3 id="Aspera-使用"><a href="#Aspera-使用" class="headerlink" title="Aspera 使用"></a>Aspera 使用</h3><h4 id="ascp-常用的参数如下："><a href="#ascp-常用的参数如下：" class="headerlink" title="ascp 常用的参数如下："></a>ascp 常用的参数如下：</h4><ul>
<li>-T：不进行加密。若不添加此参数，可能会下载不了。</li>
<li>-l：设置最大传输速度，比如设置为 200M 则表示最大传输速度为 200m/s。若不设置该参数，则一般可达到10m/s的速度，而设置了，传输速度可以更高。</li>
<li>-i：输入私钥。安装 aspera 后有在目录 ~/.aspera/connect/etc/ 下有几个私钥，使用 linux 服务器的时候一般使用 asperaweb_id_dsa.openssh 文件作为私钥。</li>
<li>–host=string：ftp的host名，NCBI的为ftp-private.ncbi.nlm.nih.gov；EBI的为fasp.sra.ebi.ac.uk。</li>
<li>–user=string：用户名，NCBI的为anonftp，EBI的为era-fasp</li>
<li>–mode=string：选择模式。上传为 send，下载recv</li>
</ul>
<h4 id="从NCBI下载SRA文件"><a href="#从NCBI下载SRA文件" class="headerlink" title="从NCBI下载SRA文件"></a>从NCBI下载SRA文件</h4><p>例如要下载<a href="ftp://ftp.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByRun/sra/ERR/ERR188/ERR188245/ERR188245.sra" target="_blank" rel="noopener">ftp://ftp.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByRun/sra/ERR/ERR188/ERR188245/ERR188245.sra</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[bio@ubuntu~]<span class="variable">$ascp</span> -T -l 200M -i ~/.aspera/connect/etc/asperaweb_id_dsa.openssh anonftp@ftp-private.ncbi.nlm.nih.gov:/sra/sra-instant/reads/ByRun/sra/ERR/ERR188/ERR188245/ERR188245.sra ./</span><br></pre></td></tr></table></figure>

<h4 id="从EBI下载SRA文件"><a href="#从EBI下载SRA文件" class="headerlink" title="从EBI下载SRA文件"></a>从EBI下载SRA文件</h4><p>例如要下载<a href="ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR188/ERR188245/ERR188245_1.fastq.gz" target="_blank" rel="noopener">ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR188/ERR188245/ERR188245_1.fastq.gz</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[bio@ubuntu~]$ ascp -P33001 -T -l 200M -i ~/.aspera/connect/etc/asperaweb_id_dsa.openssh era-fasp@fasp.sra.ebi.ac.uk:/vol1/fastq/ERR188/ERR188245/ERR188245_1.fastq.gz ./</span><br></pre></td></tr></table></figure>

<p>-P33001：EBI这个参数是必须的，但是NCBI不需要，要不然会报错Session Stop (Error: Failed to open TCP connection for SSH)</p>
]]></content>
      <categories>
        <category>生物信息学常用软件</category>
      </categories>
      <tags>
        <tag>生信软件</tag>
        <tag>下载SRA文件</tag>
      </tags>
  </entry>
  <entry>
    <title>kobas 富集分析超快超速度</title>
    <url>/2019/12/21/kobas/</url>
    <content><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>富集分析一般是高通量实验，如基因芯片，RNA-Seq，蛋白质组学（质谱结果）的后续分析步骤。常见的就是GO功能注释和KEGG通路富集分析。通过基因通路富集分析，我们可以初步分析基因可能参与的生物学过程或者信号通路。</p>
<p>富集分析的工具有很多，DAVID，STRING，Kobas，R语言等。其中DAVID在2016年以后就很少更新了；String是瑞士苏黎世大学构建的一个搜寻蛋白质之间相互作用的数据库；R语言则语言有一定的编程基础；Kobas是用于注释富集途径和疾病的数据库，有在线版的也有服务器版的，在线的易用，服务器版的速度，不管你是生信小白或者大神都适用哦。</p>
<a id="more"></a>
<h3 id="Kobas简介"><a href="#Kobas简介" class="headerlink" title="Kobas简介"></a>Kobas简介</h3><p>KOBAS（KEGG Orthology Based Annotation System)，(<a href="http://kobas.cbi.pku.edu.cn/index.php" target="_blank" rel="noopener">http://kobas.cbi.pku.edu.cn/index.php</a> )是北京大学开发的用于基因、蛋白质功能注释和功能基因富集分析的web服务器。现在版本已经更新到Kobas 3.0，注释的数据库包括pathway、disease和GO。Kobas 3.0主要有两个功能，注释（Annotation）和富集（Enrichment）。富集又包括Gene-list富集和Exp-data富集。</p>
<h3 id="Kobas的优点"><a href="#Kobas的优点" class="headerlink" title="Kobas的优点"></a>Kobas的优点</h3><p>KOBAS有以下几个优点：</p>
<ol>
<li>Gene-list富集输入的可以是核苷酸序列也可以是蛋白质序列，还可以是tab分隔的blast结果，还可以是NCBI Entrez Gene ID、RefSeq Protein ID、Ensembl Gene ID、UniprotKB AC/ID </li>
<li>Kobas支持的物种有4000多种，不限于模式生物</li>
<li>统计检验方法有Fisher’s exact test和hypergeometric distribution test</li>
<li>底层的数据库数据每3个月更新一次</li>
</ol>
<h3 id="在线分析实例"><a href="#在线分析实例" class="headerlink" title="在线分析实例"></a>在线分析实例</h3><h4 id="Gene-list富集分析"><a href="#Gene-list富集分析" class="headerlink" title="Gene-list富集分析"></a>Gene-list富集分析</h4><ol>
<li><p>点击圈红的Gene-list Enrichment进去；<br><img src="/images/1.jpg" alt="image"></p>
</li>
<li><p>Input<br><img src="/images/1.1.jpg" alt="image"></p>
</li>
</ol>
<ul>
<li>首先选择Gene-list的类型。可以是NCBI Entrez Gene ID、RefSeq Protein ID、Ensembl Gene ID、UniprotKB AC/ID；也可以是核苷酸或蛋白质的Fasta序列；还可以是Tab分隔的BLAST结果。</li>
<li>然后选择类型对应的物种，默认物种是人。</li>
<li>然后输入对应类型的Gene-list。</li>
<li>选择富集分析需要的数据库，</li>
</ul>
<ol start="3">
<li>点击Run显示以下信息，程序在后台运行。<br><img src="/images/0.jpg" alt="image"></li>
<li>运行完毕得出以下结果。点击Download可以下载结果列表。列表有以下几个列：<br><img src="/images/2.jpg" alt="image"></li>
</ol>
<ul>
<li>Term：KEGG pathway通路名称或GO Term功能的描述；</li>
<li>Database：分析时所选的数据库，这里是GO和KEGG；</li>
<li>ID：指富集到的对应数据库的ID条目；</li>
<li>Input number：Gene-list落在该通路或GO term的基因数目；</li>
<li>Background number：该通路或GO Term相关的基因数目；</li>
<li>P-value：富集到该通路的显著性水平，越小越显著；</li>
<li>Corrected P-value：矫正的P-value，列表默认按照Corrected P-value由小到大排序。</li>
</ul>
<h4 id="Exp-data富集分析"><a href="#Exp-data富集分析" class="headerlink" title="Exp-data富集分析"></a>Exp-data富集分析</h4><p><img src="/images/3.jpg" alt="image"><br>基因表达数据分析需要输入两个文件，一个是表达矩阵文件，一个是样本分类文件。</p>
<ul>
<li>表达矩阵的格式如下图：是一个tab分隔的txt文件，列对应样本，行对应基因ID。表达数据既可以是芯片表达矩阵，也可以是RNA-seq表达矩阵。芯片数据可以是raw reads数据，而RNA-seq数据只能是FPKM/RPKM数据，不能是raw reads。<br><img src="/images/4.jpg" alt="image"></li>
<li>样本分类如下图：<br><img src="/images/5.png" alt="image"></li>
<li>输出结果有五列：<br><img src="/images/6.jpg" alt="image"><ul>
<li>GENE SET：指富集到的通路编号或GO Term编号；</li>
<li>NAME：指富集到的KEGG pathway通路名称或GO Term功能的描述；</li>
<li>POSITIVE：1.0代表显著富集；</li>
<li>PROBABILITY：代表预测的可信度；</li>
<li>ENRICH SCORE：指目标通路与separating hyperplane of SVM的距离，数值越大越好；</li>
</ul>
</li>
</ul>
<h3 id="KOBAS本地化"><a href="#KOBAS本地化" class="headerlink" title="KOBAS本地化"></a>KOBAS本地化</h3><p>安装KOBAS需要先安装一些依赖的python包、R包以及相关软件。</p>
<h4 id="1、依赖的python包"><a href="#1、依赖的python包" class="headerlink" title="1、依赖的python包"></a>1、依赖的python包</h4><p>安装KOBAS 3.0 需要Python (&gt;= 2.3 and not 3.x)，并且需要安装以下第三方包：</p>
<ul>
<li>SQLite (3.x) and PySQLite (2.x)</li>
<li>BioPython (&gt;= 1.4.3)</li>
<li>RPy2 (&gt;= 2.2.4)</li>
<li>matplotlib </li>
<li>Numpy (&gt;= 1.8.0)</li>
<li>Pandas (&gt;= 0.17.1)</li>
</ul>
<h4 id="2、依赖的R包"><a href="#2、依赖的R包" class="headerlink" title="2、依赖的R包"></a>2、依赖的R包</h4><p>安装KOBAS 3.0 需要R (&gt;= 2.0)，并且需要安装如下第三方包：</p>
<ul>
<li>QVALUE</li>
<li>EnrichmentBrowser</li>
<li>GSVA</li>
<li>gage</li>
</ul>
<h4 id="3、其他软件"><a href="#3、其他软件" class="headerlink" title="3、其他软件"></a>3、其他软件</h4><p>安装KOBAS 3.0 需要安装NCBI BLAST+</p>
<p>Download: <a href="ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/" target="_blank" rel="noopener">ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/</a></p>
<p>Installation: </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zvf ncbi-blast-x.x.x+-x64-linux.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/ncbi-blast-2.2.29+/bin"</span>  </span><br><span class="line"><span class="comment">#(or add path to your .bashrc)</span></span><br></pre></td></tr></table></figure>

<h4 id="4、安装KOBAS"><a href="#4、安装KOBAS" class="headerlink" title="4、安装KOBAS"></a>4、安装KOBAS</h4><p>首先，下载KOBAS 3.0 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://kobas.cbi.pku.edu.cn/kobas-2.1.1/kobas-3.0.3.tar.gz</span><br><span class="line">tar -zxf kobas-3.0.3.tar.gz</span><br><span class="line"><span class="comment"># 解压就能用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">########解压后的文件结构#########</span></span><br><span class="line">kobas-3.0.3/</span><br><span class="line">		|-----README : introduce how to install kobas and how to use it.</span><br><span class="line"></span><br><span class="line">		|-----scripts : run KOBAS program.</span><br><span class="line"></span><br><span class="line">		|-----seq_pep : store FASTA format protein sequence files of KO and all supported species </span><br><span class="line"></span><br><span class="line">		|-----sqlite3 : store backend databases of KO and all supported species </span><br><span class="line"></span><br><span class="line">		|-----src : store KOBAS <span class="built_in">source</span> codes.</span><br><span class="line"></span><br><span class="line">		|-----<span class="built_in">test</span> : store example data <span class="keyword">for</span> testing KOBAS.</span><br><span class="line"><span class="comment">#################################</span></span><br></pre></td></tr></table></figure>

<p>然后，下载KOBAS数据包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">########KOBAS organism data package########</span></span><br><span class="line">wget ftp://ftp.cbi.pku.edu.cn/pub/KOBAS_3.0_DOWNLOAD/sqlite3/organism.db.gz</span><br><span class="line">gunzip organism.db.gz <span class="comment">#复制到 sqlite3 目录</span></span><br><span class="line"></span><br><span class="line"><span class="comment">########下载自己需要的物种#################</span></span><br><span class="line">wget ftp://ftp.cbi.pku.edu.cn/pub/KOBAS_3.0_DOWNLOAD/sqlite3/hsa.db.gz</span><br><span class="line">gunzip hsa.db.gz  <span class="comment">#复制到sqlite3 目录</span></span><br><span class="line"></span><br><span class="line"><span class="comment">########下载对应物种的pep序列##############</span></span><br><span class="line">wget ftp://ftp.cbi.pku.edu.cn/pub/KOBAS_3.0_DOWNLOAD/seq_pep/hsa.pep.fasta.gz</span><br><span class="line">gunzip hsa.pep.fasta.gz  <span class="comment">#复制到seq_pep 目录</span></span><br><span class="line"></span><br><span class="line"><span class="comment">########建blast数据库######################</span></span><br><span class="line">makeblastdb -<span class="keyword">in</span> hsa.pep.fasta -dbtype prot</span><br></pre></td></tr></table></figure>

<p>最后，配置KOBAS运行环境</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PYTHONPATH = kobas-3.0.0-beta/src:<span class="variable">$PYTHONPATH</span></span><br><span class="line"></span><br><span class="line">cp kobas-3.0/docs/kobasrc  ~/.kobasrc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vim .kobasrc <span class="comment">#编辑配置文件</span></span><br><span class="line"><span class="comment">######.kobasrc文件内容如下#########</span></span><br><span class="line">---------------------------	</span><br><span class="line"></span><br><span class="line">	[DEFAULT]</span><br><span class="line"></span><br><span class="line">	kobas_home = <span class="variable">$HOME</span>/kobas-3.0.3/	<span class="comment"># kobas 的绝对路径</span></span><br><span class="line"></span><br><span class="line">	blast_home = <span class="variable">$HOME</span>/ncbi-blast-2.2.29+/bin</span><br><span class="line"></span><br><span class="line">	[KOBAS]</span><br><span class="line"></span><br><span class="line">	kobasdb	= %(kobas_home)s/sqlite3/	<span class="comment"># path to Backend databases of KO and all supported species, if you don't want to state it by kobas_home, # you can also write the absolute path after "="</span></span><br><span class="line"></span><br><span class="line">	[BLAST]</span><br><span class="line"></span><br><span class="line">	blastp = %(blast_home)s/blastp		<span class="comment"># path to program blastp</span></span><br><span class="line">	blastx = %(blast_home)s/blastx		<span class="comment"># path to program blastx</span></span><br><span class="line">	blastdb = %(kobas_home)s/seq_pep/	<span class="comment"># path to FASTA format protein sequence files of KO and all supported species</span></span><br><span class="line"></span><br><span class="line"> -----------------------------</span><br></pre></td></tr></table></figure>

<p> Kobas的使用</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> <span class="comment">### 注释</span></span><br><span class="line">$ annotate.py -i inputfile -t blastout:tab -s ko -o outfile</span><br><span class="line"><span class="comment"># -t：输入文件的类型，有blastout:tab和blastout:xml，fasta:pro，fasta:nuc,id:ncbigene,id:refseqpro,id:uniport,id:ensembl</span></span><br><span class="line"><span class="comment"># -s：物种类型，ko指KEGG Orthology，has人，mmu 小鼠，等等</span></span><br><span class="line"><span class="comment"># -k：KOBAS home</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 检测</span></span><br><span class="line">$ identify.py -f inputfile -o outfile -m h </span><br><span class="line"> <span class="comment">#identify的inputfile是annotate的outfile</span></span><br><span class="line"><span class="comment"># -m：统计检验方法，c代表chi-square test，h代表hypergeometric test/ Fisher's exact test，x代表frequency list</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">###富集</span></span><br><span class="line">$ cluster.py -i inputfile -m k -o outfile </span><br><span class="line"><span class="comment"># -m：method，K表示 Cohen’s kappa coefficient；j表示jaccard similarity coefficient</span></span><br><span class="line"><span class="comment"># -d：database，P代表PATHWAY，D代表DISEASE，G代表GO</span></span><br><span class="line"><span class="comment"># -t：threshold,默认0.35</span></span><br></pre></td></tr></table></figure>

<p>参考：</p>
<p><a href="http://kobas.cbi.pku.edu.cn/help.php" target="_blank" rel="noopener">http://kobas.cbi.pku.edu.cn/help.php</a><br><a href="https://www.jianshu.com/p/5a4bda169247" target="_blank" rel="noopener">https://www.jianshu.com/p/5a4bda169247</a></p>
]]></content>
      <categories>
        <category>生物信息学常用软件</category>
      </categories>
      <tags>
        <tag>生信软件</tag>
        <tag>富集分析</tag>
        <tag>python软件</tag>
      </tags>
  </entry>
</search>
